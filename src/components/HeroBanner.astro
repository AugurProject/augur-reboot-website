---
import AugurLogo from '../assets/augur.svg';
import ForkMonitor from './ForkMonitor.tsx';
import SocialLinks from './SocialLinks.astro';
import { withBase } from '../lib/utils';
---

<div class="fixed inset-0 h-screen w-screen overflow-scroll">
  <div id="hero-banner-container" class="grid grid-rows-[1fr_auto_1fr] h-screen z-10 text-center overflow-y-scroll gap-y-8">
    <!-- Top Section: Social Links Only -->
    <div class="flex justify-center md:justify-end place-content-start p-8">
      <SocialLinks />
    </div>

    <!-- Middle Section: Main Content (Logo, Tagline, IS REBOOTING, Menu) -->
    <div class="flex flex-col items-center place-items-center gap-y-4">
      <AugurLogo id="augur-logo" class:list="text-9xl" />
      <p id="prediction-market-text" class="border border-foreground/20 px-3 py-1 mx-4 text-lg tracking-[0.25rem] leading-none">
        THE FRONTIER OF PREDICTION MARKETS
      </p>

      <h2 class="grid grid-cols-[minmax(0.25rem,1rem)_1fr_minmax(0.25rem,1rem)] items-center gap-x-4 title">
        <span id="line-left" class="h-[1px] bg-foreground"></span>
        <pre id="is-rebooting-text" class="title leading-none tracking-tight text-[size:clamp(0.285rem,_1vw,_0.5rem)]">
██╗ ███████╗     ██████╗  ███████╗ ██████╗   ██████╗   ██████╗  ████████╗ ██╗ ███╗   ██╗  ██████╗ 
██║ ██╔════╝     ██╔══██╗ ██╔════╝ ██╔══██╗ ██╔═══██╗ ██╔═══██╗ ╚══██╔══╝ ██║ ████╗  ██║ ██╔════╝ 
██║ ███████╗     ██████╔╝ █████╗   ██████╔╝ ██║   ██║ ██║   ██║    ██║    ██║ ██╔██╗ ██║ ██║  ███╗
██║ ╚════██║     ██╔══██╗ ██╔══╝   ██╔══██╗ ██║   ██║ ██║   ██║    ██║    ██║ ██║╚██╗██║ ██║   ██║
██║ ███████║     ██║  ██║ ███████╗ ██████╔╝ ╚██████╔╝ ╚██████╔╝    ██║    ██║ ██║ ╚████║ ╚██████╔╝
╚═╝ ╚══════╝     ╚═╝  ╚═╝ ╚══════╝ ╚═════╝   ╚═════╝   ╚═════╝     ╚═╝    ╚═╝ ╚═╝  ╚═══╝  ╚═════╝ 
        </pre>
        <span id="line-right" class="h-[1px] bg-foreground"></span>
      </h2>

      <div id="menu-items-container" class="flex flex-col place-items-center text-left w-full max-w-3xl mx-auto">
        <a id="first-menu-item" href={withBase('/mission')} class="text-2xl font-bold text-foreground block hover:text-loud-foreground focus:text-loud-foreground hover:fx-glow focus:fx-glow focus:outline-none">
          THE NEXT GENERATION OF ORACLES
        </a>
        <a href={withBase('/team')} class="text-2xl font-bold text-foreground hover:text-loud-foreground focus:text-loud-foreground block hover:fx-glow focus:fx-glow focus:outline-none ">
          THE MINDS BEHIND THE REBOOT
        </a>
      </div>
    </div>

    <!-- Bottom Section: Fork Monitor -->
    <div id="fork-meter-container" class="place-content-end pb-4">
      <ForkMonitor client:load animated={true} />
    </div>
  </div>
</div>

<style>
  /* --- Keyframe Definitions --- */
  @keyframes fade-in-up {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes fade-in-down {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes logo-fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes logo-scale-down {
    from { transform: scale(2) translateY(50%); }
    to { transform: scale(1) translateY(0); }
  }

  @keyframes scale-in {
    from { opacity: 0; transform: scale(0.5); }
    to { opacity: 1; transform: scale(1); }
  }

  @keyframes slide-in-from-right {
    from { opacity: 0; transform: translateX(25px); }
    to { opacity: 1; transform: translateX(0); }
  }

  @keyframes slide-in-from-left {
    from { opacity: 0; transform: translateX(-25px); }
    to { opacity: 1; transform: translateX(0); }
  }

  @keyframes bounce-horizontal {
    0%, 100% {
      transform: translateX(0);
    }
    50% {
      transform: translateX(-8px);
    }
  }

  /* --- Initial Animation States --- */
  #is-rebooting-text,
  #line-left,
  #line-right,
  #prediction-market-text,
  #menu-items-container a,
  #fork-meter-container {
    opacity: 0;
  }

  #augur-logo {
    opacity: 0;
    transform: scale(2) translateY(50%);
  }

  /* --- Menu Pointer (Semantic & Nested) --- */
  #menu-items-container a {
    position: relative; /* Needed for pseudo-element positioning */

    &::before {
      content: '>';
      opacity: 0;
      color: var(--color-foreground);
      display: inline-block;
      margin-right: 0.5rem;
      transition: opacity 0.2s ease-in-out;
    }

    /* Default hover and focus behavior */
    &:hover, &:focus {
      &::before {
        opacity: 1;
        animation: bounce-horizontal 1s ease-in-out infinite;
      }
    }
  }

  /* --- Hover Priority (:has) --- */
  /* When a link is being hovered inside the container... */
  #menu-items-container:has(a:hover) {
    /* ...target the link that is focused but NOT hovered. */
    & a:focus:not(:hover) {
      /* Revert its text color */
      color: var(--color-primary);
      /* Hide its pointer */
      &::before {
        opacity: 0;
        animation: none;
      }
    }
  }

  /* --- Animation Skip State --- */
  #hero-banner-container.animations-skipped #augur-logo {
    opacity: 1;
    transform: scale(1) translateY(0);
  }

  #hero-banner-container.animations-skipped #is-rebooting-text,
  #hero-banner-container.animations-skipped #line-left,
  #hero-banner-container.animations-skipped #line-right,
  #hero-banner-container.animations-skipped #prediction-market-text,
  #hero-banner-container.animations-skipped #menu-items-container a,
  #hero-banner-container.animations-skipped #fork-meter-container {
    opacity: 1;
    transform: none; /* Resets any initial transform */
  }

  /* --- Animation Trigger --- */

  #hero-banner-container.animations-started #augur-logo {
    animation: 
      logo-fade-in 0.5s ease-in 0s forwards,
      logo-scale-down 1s ease-out 0.5s forwards;
  }

  #hero-banner-container.animations-started #prediction-market-text {
    animation: fade-in-up 0.8s ease-out 1.5s forwards;
  }

  #hero-banner-container.animations-started #line-left {
    animation: slide-in-from-right 0.25s ease-out 2.3s forwards;
  }
  #hero-banner-container.animations-started #line-right {
    animation: slide-in-from-left 0.25s ease-out 2.3s forwards;
  }

  #hero-banner-container.animations-started #is-rebooting-text {
    animation: scale-in 0.4s ease-in 2.6s forwards;
  }

  #hero-banner-container.animations-started #menu-items-container a:nth-of-type(1) {
    animation: fade-in-up 0.5s ease-out 3.0s forwards;
  }
  #hero-banner-container.animations-started #menu-items-container a:nth-of-type(2) {
    animation: fade-in-up 0.5s ease-out 3.2s forwards;
  }
  #hero-banner-container.animations-started #menu-items-container a:nth-of-type(3) {
    animation: fade-in-up 0.5s ease-out 3.4s forwards;
  }

  #hero-banner-container.animations-started #fork-meter-container {
    animation: fade-in-up 0.6s ease-out 3.6s forwards;
  }
</style>

<script>
  import { $appStore, UIState, appActions } from '../stores/animationStore';

  // DOM element references
  let heroBanner: HTMLElement | null = null;
  let firstMenuItem: HTMLAnchorElement | null = null;
  let unsubscribe: (() => void) | null = null;
  let isInitialized = false;
  let lastAppliedState: UIState | null = null;
  let focusTimeout: number | null = null;

  function initializeElements() {
    heroBanner = document.getElementById('hero-banner-container');
    firstMenuItem = document.getElementById('first-menu-item') as HTMLAnchorElement;
  }

  function updateHeroBanner(state: typeof $appStore.value) {
    if (!heroBanner) return;
    
    // Prevent redundant updates - only update if state actually changed
    if (lastAppliedState === state.uiState) {
      return;
    }

    lastAppliedState = state.uiState;

    // Clear any pending focus timeout
    if (focusTimeout) {
      clearTimeout(focusTimeout);
      focusTimeout = null;
    }

    // Clear all animation classes
    heroBanner.classList.remove('animations-started', 'animations-skipped');

    // Apply appropriate class based on current UI state
    switch (state.uiState) {
      case UIState.MAIN_CONTENT:
        // Check if this is from skipping intro or natural completion
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('intro') === 'false') {
          heroBanner.classList.add('animations-skipped');
          firstMenuItem?.focus();
        } else {
          heroBanner.classList.add('animations-started');
          // Focus after animations complete (3.6s total)
          focusTimeout = setTimeout(() => {
            firstMenuItem?.focus();
            focusTimeout = null;
          }, 3600);
        }
        break;
      
      case UIState.BOOT_SEQUENCE:
        // Keep elements hidden until boot sequence completes
        break;
    }
  }

  function setupStoreSubscription() {
    // Clean up existing subscription
    if (unsubscribe) {
      unsubscribe();
      unsubscribe = null;
    }

    // Subscribe to store changes
    unsubscribe = $appStore.subscribe((state) => {
      updateHeroBanner(state);
    });
  }

  function initialize() {
    if (isInitialized) {
      return;
    }

    initializeElements();
    setupStoreSubscription();
    
    // Initialize store state based on current URL
    appActions.initializeFromURL();
    
    // Update UI immediately with current state
    updateHeroBanner($appStore.get());
    
    isInitialized = true;
  }

  // Handle view transition events
  function handleViewTransition() {
    // Re-initialize elements after DOM swap but don't re-setup subscription
    initializeElements();
    
    // Reset tracking variable to allow updates for new page context
    lastAppliedState = null;
    
    // Handle navigation in store
    appActions.handleNavigation();
  }

  // Initialize on load
  initialize();

  // Set up event listeners
  document.addEventListener('astro:page-load', handleViewTransition);
  document.addEventListener('astro:after-swap', handleViewTransition);

  // Clean up on page unload
  window.addEventListener('beforeunload', () => {
    if (unsubscribe) {
      unsubscribe();
    }
    if (focusTimeout) {
      clearTimeout(focusTimeout);
    }
  });
</script>
