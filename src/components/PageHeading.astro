---
export interface Props {
  text: string;
  icon?: boolean;
  class?: string;
}

const { text, icon = false, class: className = "" } = Astro.props;
---

<h1 class={`flex justify-center items-center gap-3 text-loud-foreground font-bold text-2xl tracking-[4px] uppercase mt-16 mb-8 ${className}`}>
  {icon && <span class="title-icon"></span>}
  <span class="text-muted-foreground">[[</span> {text} <span class="text-muted-foreground">]]</span>
</h1>

<style>
  .title-icon {
    display: block;
    width: 20px;
    height: 20px;
    background-color: #00ff9b;
    -webkit-mask: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0H7V7H0V0Z' fill='black'/%3E%3Cpath d='M0 13H7V20H0V13Z' fill='black'/%3E%3Cpath d='M13 0H20V7H13V0Z' fill='black'/%3E%3Cpath d='M13 13H20V20H13V13Z' fill='black'/%3E%3C/svg%3E%0A")
      no-repeat center;
    mask: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0 0H7V7H0V0Z' fill='black'/%3E%3Cpath d='M0 13H7V20H0V13Z' fill='black'/%3E%3Cpath d='M13 0H20V7H13V0Z' fill='black'/%3E%3Cpath d='M13 13H20V20H13V13Z' fill='black'/%3E%3C/svg%3E%0A")
      no-repeat center;
  }
</style>